diff --git a/pc_software/hid_op.py b/pc_software/hid_op.py
index 40bdba59..bdf85589 100644
--- a/pc_software/hid_op.py
+++ b/pc_software/hid_op.py
@@ -66,7 +66,10 @@ HID_COMMAND_CREATE_DIR = 18
 HID_COMMAND_DELETE_DIR = 19
 HID_COMMAND_SW_RESET = 20
 
-h = hid.device()
+if hasattr(hid, 'device'):
+    h = hid.device()
+else:
+    h = None
 
 def _check_hid_err(result):
     """
@@ -92,13 +95,21 @@ def _read_duckypad():
     return []
 
 def duckypad_hid_init():
-    duckypad_path = get_duckypad_path()
-    if duckypad_path is None:
-        raise OSError('duckyPad Not Found!')
-    h.open_path(duckypad_path)
+    global h
+    if h and hasattr(hid, 'device'):
+        duckypad_path = get_duckypad_path()
+        if duckypad_path is None:
+           raise OSError('duckyPad Not Found!')
+        h.open_path(duckypad_path)
+    else:
+        try:
+            h = hid.Device(0x483, 0xd11c)
+        except:
+           raise OSError('duckyPad Not Found!')
 
 def duckypad_hid_close():
-    h.close()
+    if h:
+        h.close()
 
 def duckypad_list_files(root_dir = None):
     ret = []
@@ -110,10 +121,16 @@ def duckypad_list_files(root_dir = None):
         for x in range(0, len(root_dir)):
             pc_to_duckypad_buf[3+x] = ord(root_dir[x])
 
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
+
     while 1:
         time.sleep(HID_WAIT_TIME)
         result = _read_duckypad()
+        if isinstance(result, bytes):
+            result = list(iter(result))
         if len(result) == 0 or result[2] == HID_RESPONSE_EOF:
             break
         _check_hid_err(result)
@@ -129,7 +146,10 @@ def get_dp_info():
     try:
         duckypad_hid_close()
         duckypad_hid_init()
-        h.write(pc_to_duckypad_buf)
+        if hasattr(hid, 'device'):
+            h.write(pc_to_duckypad_buf)
+        else:
+            h.write(bytes(pc_to_duckypad_buf))
         result = _read_duckypad()
     except Exception as e:
         print("get_dp_info:", e)
@@ -139,6 +159,7 @@ def get_dp_info():
 def is_dp_ready():
     dp_info = get_dp_info()
     if dp_info is None:
+        print("Err1")
         return False, 'duckyPad not Found!'
     if dp_info[2] == 0:
         return True, 'All good!'
@@ -148,7 +169,10 @@ def duckypad_hid_resume():
     pc_to_duckypad_buf = [0] * PC_TO_DUCKYPAD_HID_BUF_SIZE
     pc_to_duckypad_buf[0] = 5   # HID Usage ID, always 5
     pc_to_duckypad_buf[2] = HID_COMMAND_OP_RESUME   # Command type
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
 
 def duckypad_read_file(file_dir):
     print("duckypad_read_file", file_dir)
@@ -159,7 +183,10 @@ def duckypad_read_file(file_dir):
 
     for x in range(0, len(file_dir)):
         pc_to_duckypad_buf[3+x] = ord(file_dir[x])
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
     
     while 1:
         time.sleep(HID_WAIT_TIME)
@@ -239,7 +266,10 @@ def duckypad_open_file_for_writing(file_dir):
     for x in range(0, len(file_dir)):
         pc_to_duckypad_buf[3+x] = ord(file_dir[x])
 
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
 
     result = _read_duckypad()
     _check_hid_err(result)
@@ -249,7 +279,10 @@ def duckypad_close_file():
     pc_to_duckypad_buf[0] = 5   # HID Usage ID, always 5
     pc_to_duckypad_buf[2] = HID_COMMAND_CLOSE_FILE  # Command type
 
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
 
     result = _read_duckypad()
     _check_hid_err(result)
@@ -266,7 +299,10 @@ def duckypad_write_one_chunk(content):
     for x in range(0, len(content)):
         pc_to_duckypad_buf[3+x] = content[x]
 
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
 
     result = _read_duckypad()
     _check_hid_err(result)
@@ -285,7 +321,10 @@ def duckypad_delete_file(file_name):
     for x in range(0, len(file_name)):
         pc_to_duckypad_buf[3+x] = ord(file_name[x])
 
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
 
     result = _read_duckypad()
     _check_hid_err(result)
@@ -298,7 +337,10 @@ def duckypad_create_dir(dir_name):
     for x in range(0, len(dir_name)):
         pc_to_duckypad_buf[3+x] = ord(dir_name[x])
 
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
 
     result = _read_duckypad()
     _check_hid_err(result)
@@ -309,7 +351,10 @@ def duckypad_delete_dir(dir_name):
     pc_to_duckypad_buf[2] = HID_COMMAND_DELETE_DIR  # Command type
     for x in range(0, len(dir_name)):
         pc_to_duckypad_buf[3+x] = ord(dir_name[x])
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
     result = _read_duckypad()
     _check_hid_err(result)
 
@@ -392,4 +437,7 @@ def duckypad_hid_sw_reset():
     pc_to_duckypad_buf = [0] * PC_TO_DUCKYPAD_HID_BUF_SIZE
     pc_to_duckypad_buf[0] = 5   # HID Usage ID, always 5
     pc_to_duckypad_buf[2] = HID_COMMAND_SW_RESET    # Command type
-    h.write(pc_to_duckypad_buf)
+    if hasattr(hid, 'device'):
+        h.write(pc_to_duckypad_buf)
+    else:
+        h.write(bytes(pc_to_duckypad_buf))
